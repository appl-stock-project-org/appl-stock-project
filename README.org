* AAPL Stock Project (.NET API and Blazor Server App)

** Dev environment
You may use Emacs or other editor for modifying the files (VS Code is
also OK). VS2022 works fine too.

1. Open folder or files to modify
2. Open powershell and navigate to project folder
3. Open two more instances of the shell, so e.g give ~start powershell~
   command twice
4. Now you can use these three CLI instances to run the dev
   environment. Please refer further into these instructions.

   
You can you CMD, VS2022 shell, VSCode shell or any other shell too.

** .NET API
# On creation of empty API with sqlite:
# dotnet add package Microsoft.EntityFrameworkCore.Sqlite --version 8.0
# may need; dotnet tool install --global dotnet-ef
# dotnet add package Microsoft.EntityFrameworkCore.Design --version 8.0
# And then add namespaces to Program.cs (ef, migrations)
# dotnet ef migrations add InitialCreate
# or removal with: ef migrations remove
# dotnet ef database update

Start application with ~dotnet watch~

*** Sqlite and tools
For sqlite usage few dotnet packages and tools are needed:

#+begin_src 
dotnet add package Microsoft.EntityFrameworkCore.Sqlite --version 8.0
#+end_src

#+begin_src 
dotnet add package Microsoft.EntityFrameworkCore.Design --version 8.0  
#+end_src

#+begin_src 
dotnet tool install --global dotnet-ef  
#+end_src

#+begin_src 
dotnet ef migrations add InitialCreate  
#+end_src

#+begin_src 
dotnet ef database update  
#+end_src

If you wish, you can install Sqlite studio to manage the db:
https://sqlitestudio.pl/
** Blazor
You need to install modules:
~npm install~

# To apply class-property changes to html-elements into the .razor-files, the next command may needs to be run:
# ~npx tailwindcss -i ./wwwroot/app.css -o ./wwwroot/styles.css --watch~

To run a project, give the following command:
~dotnet watch~

Sometimes dotnet watch does not work properly and needs to be
interrupted and restarted.

# Starting empty blazor tailwindcss project:
# dotnet new blazor -o FOLDER -e
# npm install tailwindcss postcss autoprefixer
# npx tailwindcss init
# Fix content paths; content: ["./**/*.{razor,html,cshtml}"],
# Add css directives to app.css
# npx tailwindcss -i ./wwwroot/app.css -o ./wwwroot/styles.css --minify
# Change App .razor to use styles.css

** Readme comments
Readme file contains more info about creation steps of this project,
so you might want to inspect it more.

